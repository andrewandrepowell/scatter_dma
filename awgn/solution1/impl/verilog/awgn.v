// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="awgn,hls_ip_2016_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.664000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=82,HLS_SYN_FF=10267,HLS_SYN_LUT=10332}" *)

module awgn (
        ap_clk,
        ap_rst_n,
        input_axis_TDATA,
        input_axis_TVALID,
        input_axis_TREADY,
        output_axis_TDATA,
        output_axis_TVALID,
        output_axis_TREADY,
        s_axi_control_axil_AWVALID,
        s_axi_control_axil_AWREADY,
        s_axi_control_axil_AWADDR,
        s_axi_control_axil_WVALID,
        s_axi_control_axil_WREADY,
        s_axi_control_axil_WDATA,
        s_axi_control_axil_WSTRB,
        s_axi_control_axil_ARVALID,
        s_axi_control_axil_ARREADY,
        s_axi_control_axil_ARADDR,
        s_axi_control_axil_RVALID,
        s_axi_control_axil_RREADY,
        s_axi_control_axil_RDATA,
        s_axi_control_axil_RRESP,
        s_axi_control_axil_BVALID,
        s_axi_control_axil_BREADY,
        s_axi_control_axil_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 156'b1;
parameter    ap_ST_st2_fsm_1 = 156'b10;
parameter    ap_ST_st3_fsm_2 = 156'b100;
parameter    ap_ST_st4_fsm_3 = 156'b1000;
parameter    ap_ST_st5_fsm_4 = 156'b10000;
parameter    ap_ST_st6_fsm_5 = 156'b100000;
parameter    ap_ST_st7_fsm_6 = 156'b1000000;
parameter    ap_ST_st8_fsm_7 = 156'b10000000;
parameter    ap_ST_st9_fsm_8 = 156'b100000000;
parameter    ap_ST_st10_fsm_9 = 156'b1000000000;
parameter    ap_ST_st11_fsm_10 = 156'b10000000000;
parameter    ap_ST_st12_fsm_11 = 156'b100000000000;
parameter    ap_ST_st13_fsm_12 = 156'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 156'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 156'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 156'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 156'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 156'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 156'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 156'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 156'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 156'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 156'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 156'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 156'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 156'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 156'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 156'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 156'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 156'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 156'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 156'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 156'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 156'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 156'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 156'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 156'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 156'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 156'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 156'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 156'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 156'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 156'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 156'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 156'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 156'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 156'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 156'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 156'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 156'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 156'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 156'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 156'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 156'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 156'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 156'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 156'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 156'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 156'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 156'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 156'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 156'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 156'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 156'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 156'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 156'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 156'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 156'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 156'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_115 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_116 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_117 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_118 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_119 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_120 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_121 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_122 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_123 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_124 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_125 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_126 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_127 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_128 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_129 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_130 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st132_fsm_131 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st133_fsm_132 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st134_fsm_133 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st135_fsm_134 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st136_fsm_135 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st137_fsm_136 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st138_fsm_137 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st139_fsm_138 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st140_fsm_139 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st141_fsm_140 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st142_fsm_141 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st143_fsm_142 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st144_fsm_143 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st145_fsm_144 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st146_fsm_145 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st147_fsm_146 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st148_fsm_147 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st149_fsm_148 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st150_fsm_149 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st151_fsm_150 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st152_fsm_151 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st153_fsm_152 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st154_fsm_153 = 156'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st155_fsm_154 = 156'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st156_fsm_155 = 156'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_9B = 32'b10011011;
parameter    C_S_AXI_CONTROL_AXIL_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_AXIL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_94 = 32'b10010100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_99 = 32'b10011001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_90 = 32'b10010000;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_6D = 32'b1101101;
parameter    ap_const_lv32_8B = 32'b10001011;
parameter    ap_const_lv32_8C = 32'b10001100;
parameter    ap_const_lv32_8F = 32'b10001111;
parameter    ap_const_lv32_9A = 32'b10011010;
parameter    ap_const_lv32_BF800000 = 32'b10111111100000000000000000000000;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_95 = 32'b10010101;
parameter    ap_const_lv32_37800000 = 32'b110111100000000000000000000000;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_8D = 32'b10001101;
parameter    ap_const_lv32_91 = 32'b10010001;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv64_C000000000000000 = 64'b1100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_6E = 32'b1101110;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_92 = 32'b10010010;
parameter    ap_const_lv32_93 = 32'b10010011;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;

parameter C_S_AXI_CONTROL_AXIL_WSTRB_WIDTH = (C_S_AXI_CONTROL_AXIL_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [15:0] input_axis_TDATA;
input   input_axis_TVALID;
output   input_axis_TREADY;
output  [15:0] output_axis_TDATA;
output   output_axis_TVALID;
input   output_axis_TREADY;
input   s_axi_control_axil_AWVALID;
output   s_axi_control_axil_AWREADY;
input  [C_S_AXI_CONTROL_AXIL_ADDR_WIDTH - 1 : 0] s_axi_control_axil_AWADDR;
input   s_axi_control_axil_WVALID;
output   s_axi_control_axil_WREADY;
input  [C_S_AXI_CONTROL_AXIL_DATA_WIDTH - 1 : 0] s_axi_control_axil_WDATA;
input  [C_S_AXI_CONTROL_AXIL_WSTRB_WIDTH - 1 : 0] s_axi_control_axil_WSTRB;
input   s_axi_control_axil_ARVALID;
output   s_axi_control_axil_ARREADY;
input  [C_S_AXI_CONTROL_AXIL_ADDR_WIDTH - 1 : 0] s_axi_control_axil_ARADDR;
output   s_axi_control_axil_RVALID;
input   s_axi_control_axil_RREADY;
output  [C_S_AXI_CONTROL_AXIL_DATA_WIDTH - 1 : 0] s_axi_control_axil_RDATA;
output  [1:0] s_axi_control_axil_RRESP;
output   s_axi_control_axil_BVALID;
input   s_axi_control_axil_BREADY;
output  [1:0] s_axi_control_axil_BRESP;
output   interrupt;

reg input_axis_TREADY;
reg[15:0] output_axis_TDATA;
reg output_axis_TVALID;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [155:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_173;
reg    ap_ready;
wire   [31:0] stdd;
wire   [0:0] enable;
reg   [0:0] store_val;
reg   [15:0] cur;
reg   [31:0] store_g;
reg    input_axis_TDATA_blk_n;
reg    output_axis_TDATA_blk_n;
reg    ap_sig_cseq_ST_st156_fsm_155;
reg    ap_sig_202;
reg   [0:0] enable_read_reg_767;
wire   [0:0] enable_read_read_fu_124_p2;
wire   [31:0] grp_fu_204_p1;
reg   [31:0] reg_237;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_257;
reg    ap_sig_cseq_ST_st149_fsm_148;
reg    ap_sig_264;
wire   [31:0] grp_fu_175_p2;
reg   [31:0] reg_242;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_274;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_281;
reg    ap_sig_cseq_ST_st154_fsm_153;
reg    ap_sig_289;
wire   [31:0] grp_fu_197_p1;
reg   [31:0] reg_248;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_299;
reg    ap_sig_cseq_ST_st145_fsm_144;
reg    ap_sig_306;
wire   [31:0] grp_fu_185_p2;
reg   [31:0] reg_255;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_316;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_323;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_331;
wire   [31:0] grp_fu_190_p2;
reg   [31:0] reg_262;
reg   [15:0] input_axis_read_reg_762;
reg    ap_sig_342;
reg    ap_sig_ioackin_output_axis_TREADY;
wire   [0:0] store_val_load_load_fu_269_p1;
reg   [0:0] store_val_load_reg_771;
wire  signed [31:0] tmp_1_fu_273_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_370;
reg   [0:0] p_Result_2_reg_790;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_379;
wire   [15:0] p_Val2_3_fu_407_p3;
reg   [15:0] p_Val2_3_reg_795;
wire   [15:0] p_Val2_5_fu_420_p3;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_390;
reg   [13:0] tmp_i_reg_806;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_399;
wire   [0:0] tmp_i_8_fu_494_p2;
reg   [0:0] tmp_i_8_reg_811;
wire   [31:0] tmp_33_fu_508_p1;
wire   [0:0] tmp_5_i7_fu_541_p2;
reg   [0:0] tmp_5_i7_reg_821;
wire   [31:0] grp_fu_200_p1;
reg   [31:0] tmp_3_reg_831;
wire   [31:0] grp_fu_180_p2;
reg   [31:0] u2_1_reg_836;
reg   [31:0] w_reg_842;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_419;
wire   [15:0] tmp_8_i_fu_552_p4;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_428;
wire   [63:0] tmp_9_fu_210_p1;
reg   [63:0] tmp_9_reg_857;
wire   [0:0] tmp_23_fu_594_p2;
wire   [63:0] grp_fu_232_p2;
reg   [63:0] tmp_10_reg_863;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_442;
wire   [63:0] grp_fu_218_p2;
reg   [63:0] tmp_11_reg_868;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_451;
wire   [63:0] grp_fu_223_p2;
reg   [63:0] tmp_12_reg_873;
reg    ap_sig_cseq_ST_st110_fsm_109;
reg    ap_sig_460;
wire   [63:0] grp_fu_227_p2;
reg   [63:0] tmp_13_reg_878;
reg    ap_sig_cseq_ST_st140_fsm_139;
reg    ap_sig_469;
wire   [31:0] w_1_fu_207_p1;
reg   [31:0] w_1_reg_888;
reg    ap_sig_cseq_ST_st141_fsm_140;
reg    ap_sig_480;
wire  signed [31:0] tmp_38_fu_606_p1;
reg    ap_sig_cseq_ST_st144_fsm_143;
reg    ap_sig_489;
reg   [0:0] p_Result_s_reg_899;
reg    ap_sig_cseq_ST_st155_fsm_154;
reg    ap_sig_498;
wire   [15:0] p_Val2_9_fu_736_p3;
reg   [15:0] p_Val2_9_reg_904;
reg   [15:0] ret_reg_144;
wire   [15:0] p_Val2_11_fu_749_p3;
reg   [15:0] storemerge1_phi_fu_156_p4;
reg   [15:0] storemerge1_reg_153;
reg   [0:0] storemerge_phi_fu_167_p4;
reg   [0:0] storemerge_reg_163;
reg    ap_reg_ioackin_output_axis_TREADY;
reg   [31:0] grp_fu_175_p0;
reg   [31:0] grp_fu_175_p1;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_548;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_555;
reg    ap_sig_cseq_ST_st150_fsm_149;
reg    ap_sig_563;
reg   [31:0] grp_fu_185_p0;
reg   [31:0] grp_fu_185_p1;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_577;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_584;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_591;
reg    ap_sig_cseq_ST_st142_fsm_141;
reg    ap_sig_598;
reg    ap_sig_cseq_ST_st146_fsm_145;
reg    ap_sig_606;
reg   [31:0] grp_fu_190_p0;
reg   [31:0] grp_fu_190_p1;
reg   [31:0] grp_fu_197_p0;
wire   [31:0] grp_fu_200_p0;
reg  signed [31:0] grp_fu_204_p0;
reg    ap_sig_cseq_ST_st74_fsm_73;
reg    ap_sig_627;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_636;
reg    ap_sig_cseq_ST_st111_fsm_110;
reg    ap_sig_644;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_652;
wire   [31:0] p_Val2_s_fu_287_p1;
wire   [22:0] loc_V_5_fu_309_p1;
wire   [23:0] p_Result_3_fu_313_p3;
wire   [7:0] loc_V_4_fu_299_p4;
wire   [8:0] tmp_i_i_i1_cast5_fu_325_p1;
wire   [8:0] sh_assign_fu_329_p2;
wire   [7:0] tmp_1_i_i1_fu_343_p2;
wire   [0:0] isNeg_fu_335_p3;
wire  signed [8:0] tmp_1_i_i1_cast_fu_349_p1;
wire   [8:0] sh_assign_1_fu_353_p3;
wire  signed [31:0] sh_assign_1_cast_fu_361_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_365_p1;
wire   [61:0] tmp_i_i1_fu_321_p1;
wire   [61:0] tmp_2_i_i1_fu_369_p1;
wire   [23:0] tmp_3_i_i1_fu_373_p2;
wire   [0:0] tmp_fu_385_p3;
wire   [61:0] tmp_5_i_i1_fu_379_p2;
wire   [15:0] tmp_20_fu_393_p1;
wire   [15:0] tmp_24_fu_397_p4;
wire   [15:0] p_Val2_7_i_i1_fu_415_p2;
wire   [0:0] tmp_25_fu_436_p3;
wire   [0:0] tmp_26_fu_444_p3;
wire   [0:0] tmp_27_fu_452_p3;
wire   [0:0] tmp_28_fu_460_p1;
wire   [0:0] tmp2_fu_464_p2;
wire   [0:0] tmp_29_fu_470_p2;
wire   [14:0] tmp_6_i_fu_476_p4;
wire   [0:0] tmp_30_fu_486_p3;
wire   [0:0] tmp_34_fu_513_p3;
wire   [0:0] tmp_35_fu_521_p3;
wire   [0:0] tmp4_fu_535_p2;
wire   [0:0] tmp3_fu_529_p2;
wire   [15:0] ret_1_fu_500_p3;
wire   [31:0] w_to_int_fu_559_p1;
wire   [7:0] tmp_8_fu_562_p4;
wire   [22:0] tmp_37_fu_572_p1;
wire   [0:0] notrhs_fu_582_p2;
wire   [0:0] notlhs_fu_576_p2;
wire   [0:0] tmp_21_fu_588_p2;
wire   [0:0] tmp_22_fu_213_p2;
wire   [31:0] p_Val2_6_fu_616_p1;
wire   [22:0] loc_V_3_fu_638_p1;
wire   [23:0] p_Result_1_fu_642_p3;
wire   [7:0] loc_V_fu_628_p4;
wire   [8:0] tmp_i_i_i_cast6_fu_654_p1;
wire   [8:0] sh_assign_2_fu_658_p2;
wire   [7:0] tmp_1_i_i_fu_672_p2;
wire   [0:0] isNeg_1_fu_664_p3;
wire  signed [8:0] tmp_1_i_i_cast_fu_678_p1;
wire   [8:0] sh_assign_3_fu_682_p3;
wire  signed [31:0] sh_assign_3_cast_fu_690_p1;
wire  signed [23:0] sh_assign_3_cast_cast_fu_694_p1;
wire   [61:0] tmp_i_i_fu_650_p1;
wire   [61:0] tmp_2_i_i_fu_698_p1;
wire   [23:0] tmp_3_i_i_fu_702_p2;
wire   [0:0] tmp_42_fu_714_p3;
wire   [61:0] tmp_5_i_i_fu_708_p2;
wire   [15:0] tmp_31_fu_722_p1;
wire   [15:0] tmp_32_fu_726_p4;
wire   [15:0] p_Val2_7_i_i_fu_744_p2;
reg    grp_fu_204_ce;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_886;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_893;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_900;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_907;
reg    ap_sig_cseq_ST_st147_fsm_146;
reg    ap_sig_919;
reg    ap_sig_cseq_ST_st148_fsm_147;
reg    ap_sig_927;
reg   [155:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 156'b1;
#0 store_val = 1'b1;
#0 cur = 16'b1010110011100001;
#0 store_g = 32'b00000000000000000000000000000000;
#0 ap_reg_ioackin_output_axis_TREADY = 1'b0;
end

awgn_control_axil_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_AXIL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_AXIL_DATA_WIDTH ))
awgn_control_axil_s_axi_U(
    .AWVALID(s_axi_control_axil_AWVALID),
    .AWREADY(s_axi_control_axil_AWREADY),
    .AWADDR(s_axi_control_axil_AWADDR),
    .WVALID(s_axi_control_axil_WVALID),
    .WREADY(s_axi_control_axil_WREADY),
    .WDATA(s_axi_control_axil_WDATA),
    .WSTRB(s_axi_control_axil_WSTRB),
    .ARVALID(s_axi_control_axil_ARVALID),
    .ARREADY(s_axi_control_axil_ARREADY),
    .ARADDR(s_axi_control_axil_ARADDR),
    .RVALID(s_axi_control_axil_RVALID),
    .RREADY(s_axi_control_axil_RREADY),
    .RDATA(s_axi_control_axil_RDATA),
    .RRESP(s_axi_control_axil_RRESP),
    .BVALID(s_axi_control_axil_BVALID),
    .BREADY(s_axi_control_axil_BREADY),
    .BRESP(s_axi_control_axil_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .stdd(stdd),
    .enable(enable)
);

awgn_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
awgn_fadd_32ns_32ns_32_5_full_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_175_p0),
    .din1(grp_fu_175_p1),
    .ce(1'b1),
    .dout(grp_fu_175_p2)
);

awgn_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
awgn_fadd_32ns_32ns_32_5_full_dsp_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_262),
    .din1(ap_const_lv32_BF800000),
    .ce(1'b1),
    .dout(grp_fu_180_p2)
);

awgn_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
awgn_fmul_32ns_32ns_32_4_max_dsp_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_185_p0),
    .din1(grp_fu_185_p1),
    .ce(1'b1),
    .dout(grp_fu_185_p2)
);

awgn_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
awgn_fmul_32ns_32ns_32_4_max_dsp_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_190_p0),
    .din1(grp_fu_190_p1),
    .ce(1'b1),
    .dout(grp_fu_190_p2)
);

awgn_uitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
awgn_uitofp_32ns_32_6_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_197_p0),
    .ce(1'b1),
    .dout(grp_fu_197_p1)
);

awgn_uitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
awgn_uitofp_32ns_32_6_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_200_p0),
    .ce(1'b1),
    .dout(grp_fu_200_p1)
);

awgn_sitofp_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
awgn_sitofp_32s_32_6_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_204_p0),
    .ce(grp_fu_204_ce),
    .dout(grp_fu_204_p1)
);

awgn_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
awgn_fptrunc_64ns_32_1_U8(
    .din0(tmp_13_reg_878),
    .dout(w_1_fu_207_p1)
);

awgn_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
awgn_fpext_32ns_64_1_U9(
    .din0(w_reg_842),
    .dout(tmp_9_fu_210_p1)
);

awgn_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
awgn_fcmp_32ns_32ns_1_1_U10(
    .din0(w_reg_842),
    .din1(ap_const_lv32_3F800000),
    .opcode(ap_const_lv5_3),
    .dout(tmp_22_fu_213_p2)
);

awgn_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
awgn_dmul_64ns_64ns_64_6_max_dsp_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_10_reg_863),
    .din1(ap_const_lv64_C000000000000000),
    .ce(1'b1),
    .dout(grp_fu_218_p2)
);

awgn_ddiv_64ns_64ns_64_31 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
awgn_ddiv_64ns_64ns_64_31_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_11_reg_868),
    .din1(tmp_9_reg_857),
    .ce(1'b1),
    .dout(grp_fu_223_p2)
);

awgn_dsqrt_64ns_64ns_64_30 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
awgn_dsqrt_64ns_64ns_64_30_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_const_lv64_0),
    .din1(tmp_12_reg_873),
    .ce(1'b1),
    .dout(grp_fu_227_p2)
);

awgn_dlog_64ns_64ns_64_31_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
awgn_dlog_64ns_64ns_64_31_full_dsp_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_const_lv64_0),
    .din1(tmp_9_reg_857),
    .ce(1'b1),
    .dout(grp_fu_232_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_output_axis_TREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0) & ~(~(enable_read_reg_767 == 1'b0) & (1'b0 == ap_sig_ioackin_output_axis_TREADY))) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & (1'b0 == enable_read_read_fu_124_p2) & ~(ap_sig_342 | ((1'b0 == enable_read_read_fu_124_p2) & (1'b0 == ap_sig_ioackin_output_axis_TREADY)))))) begin
            ap_reg_ioackin_output_axis_TREADY <= 1'b0;
        end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & (1'b0 == enable_read_read_fu_124_p2) & ~ap_sig_342 & (1'b1 == output_axis_TREADY)) | ((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0) & (1'b1 == output_axis_TREADY)))) begin
            ap_reg_ioackin_output_axis_TREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st42_fsm_41) & ~(1'b0 == tmp_23_fu_594_p2))) begin
        ret_reg_144 <= tmp_8_i_fu_552_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_sig_342 | ((1'b0 == enable_read_read_fu_124_p2) & (1'b0 == ap_sig_ioackin_output_axis_TREADY))) & ~(1'b0 == enable_read_read_fu_124_p2) & ~(1'b0 == store_val_load_load_fu_269_p1))) begin
        ret_reg_144 <= cur;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        storemerge1_reg_153 <= p_Val2_5_fu_420_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0) & ~(~(enable_read_reg_767 == 1'b0) & (1'b0 == ap_sig_ioackin_output_axis_TREADY)) & ~(1'b0 == store_val_load_reg_771))) begin
        storemerge1_reg_153 <= p_Val2_11_fu_749_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        storemerge_reg_163 <= 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0) & ~(~(enable_read_reg_767 == 1'b0) & (1'b0 == ap_sig_ioackin_output_axis_TREADY)) & ~(1'b0 == store_val_load_reg_771))) begin
        storemerge_reg_163 <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st42_fsm_41) & (1'b0 == tmp_23_fu_594_p2))) begin
        cur <= tmp_8_i_fu_552_p4;
        tmp_9_reg_857 <= tmp_9_fu_210_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_sig_342 | ((1'b0 == enable_read_read_fu_124_p2) & (1'b0 == ap_sig_ioackin_output_axis_TREADY))))) begin
        enable_read_reg_767 <= enable;
        input_axis_read_reg_762 <= input_axis_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        p_Result_2_reg_790 <= p_Val2_s_fu_287_p1[ap_const_lv32_1F];
        p_Val2_3_reg_795 <= p_Val2_3_fu_407_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st155_fsm_154)) begin
        p_Result_s_reg_899 <= p_Val2_6_fu_616_p1[ap_const_lv32_1F];
        p_Val2_9_reg_904 <= p_Val2_9_fu_736_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st149_fsm_148))) begin
        reg_237 <= grp_fu_204_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st154_fsm_153))) begin
        reg_242 <= grp_fu_175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st145_fsm_144))) begin
        reg_248 <= grp_fu_197_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st149_fsm_148) | (1'b1 == ap_sig_cseq_ST_st145_fsm_144) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35))) begin
        reg_255 <= grp_fu_185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st145_fsm_144) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35))) begin
        reg_262 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st149_fsm_148)) begin
        store_g <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0) & ~(~(enable_read_reg_767 == 1'b0) & (1'b0 == ap_sig_ioackin_output_axis_TREADY)))) begin
        store_val <= storemerge_phi_fu_167_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_sig_342 | ((1'b0 == enable_read_read_fu_124_p2) & (1'b0 == ap_sig_ioackin_output_axis_TREADY))) & ~(1'b0 == enable_read_read_fu_124_p2))) begin
        store_val_load_reg_771 <= store_val;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        tmp_10_reg_863 <= grp_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        tmp_11_reg_868 <= grp_fu_218_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st110_fsm_109)) begin
        tmp_12_reg_873 <= grp_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st140_fsm_139)) begin
        tmp_13_reg_878 <= grp_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        tmp_3_reg_831 <= grp_fu_200_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        tmp_5_i7_reg_821 <= tmp_5_i7_fu_541_p2;
        tmp_i_8_reg_811 <= tmp_i_8_fu_494_p2;
        tmp_i_reg_806 <= {{ret_reg_144[ap_const_lv32_F : ap_const_lv32_2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        u2_1_reg_836 <= grp_fu_180_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st141_fsm_140)) begin
        w_1_reg_888 <= w_1_fu_207_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        w_reg_842 <= grp_fu_175_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(~(enable_read_reg_767 == 1'b0) & (1'b0 == ap_sig_ioackin_output_axis_TREADY)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(~(enable_read_reg_767 == 1'b0) & (1'b0 == ap_sig_ioackin_output_axis_TREADY)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_460) begin
        ap_sig_cseq_ST_st110_fsm_109 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st110_fsm_109 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_644) begin
        ap_sig_cseq_ST_st111_fsm_110 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st111_fsm_110 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_274) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_379) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_390) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_469) begin
        ap_sig_cseq_ST_st140_fsm_139 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st140_fsm_139 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_480) begin
        ap_sig_cseq_ST_st141_fsm_140 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st141_fsm_140 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_598) begin
        ap_sig_cseq_ST_st142_fsm_141 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st142_fsm_141 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_489) begin
        ap_sig_cseq_ST_st144_fsm_143 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st144_fsm_143 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_306) begin
        ap_sig_cseq_ST_st145_fsm_144 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st145_fsm_144 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_606) begin
        ap_sig_cseq_ST_st146_fsm_145 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st146_fsm_145 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_919) begin
        ap_sig_cseq_ST_st147_fsm_146 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st147_fsm_146 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_927) begin
        ap_sig_cseq_ST_st148_fsm_147 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st148_fsm_147 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_264) begin
        ap_sig_cseq_ST_st149_fsm_148 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st149_fsm_148 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_399) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_563) begin
        ap_sig_cseq_ST_st150_fsm_149 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st150_fsm_149 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_289) begin
        ap_sig_cseq_ST_st154_fsm_153 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st154_fsm_153 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_498) begin
        ap_sig_cseq_ST_st155_fsm_154 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st155_fsm_154 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_202) begin
        ap_sig_cseq_ST_st156_fsm_155 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st156_fsm_155 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_299) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_173) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_577) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_316) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_584) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_323) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_548) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_886) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_281) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_591) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_331) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_555) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_893) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_419) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_428) begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_652) begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_900) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_907) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_257) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_442) begin
        ap_sig_cseq_ST_st73_fsm_72 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_627) begin
        ap_sig_cseq_ST_st74_fsm_73 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_73 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_451) begin
        ap_sig_cseq_ST_st79_fsm_78 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_370) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_636) begin
        ap_sig_cseq_ST_st80_fsm_79 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_output_axis_TREADY)) begin
        ap_sig_ioackin_output_axis_TREADY = output_axis_TREADY;
    end else begin
        ap_sig_ioackin_output_axis_TREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        grp_fu_175_p0 = reg_255;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st150_fsm_149))) begin
        grp_fu_175_p0 = reg_237;
    end else begin
        grp_fu_175_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st150_fsm_149)) begin
        grp_fu_175_p1 = reg_255;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_175_p1 = reg_262;
    end else if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_175_p1 = ap_const_lv32_BF800000;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_175_p1 = store_g;
    end else begin
        grp_fu_175_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st142_fsm_141))) begin
        grp_fu_185_p0 = reg_242;
    end else if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st146_fsm_145))) begin
        grp_fu_185_p0 = reg_255;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_185_p0 = reg_248;
    end else begin
        grp_fu_185_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        grp_fu_185_p1 = reg_248;
    end else if ((1'b1 == ap_sig_cseq_ST_st142_fsm_141)) begin
        grp_fu_185_p1 = w_1_reg_888;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_185_p1 = reg_242;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_185_p1 = ap_const_lv32_40000000;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_185_p1 = ap_const_lv32_37800000;
    end else begin
        grp_fu_185_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st142_fsm_141))) begin
        grp_fu_190_p0 = u2_1_reg_836;
    end else if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st146_fsm_145))) begin
        grp_fu_190_p0 = reg_262;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_190_p0 = tmp_3_reg_831;
    end else begin
        grp_fu_190_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        grp_fu_190_p1 = reg_248;
    end else if ((1'b1 == ap_sig_cseq_ST_st142_fsm_141)) begin
        grp_fu_190_p1 = w_1_reg_888;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_190_p1 = u2_1_reg_836;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_190_p1 = ap_const_lv32_40000000;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_190_p1 = ap_const_lv32_37800000;
    end else begin
        grp_fu_190_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st140_fsm_139)) begin
        grp_fu_197_p0 = stdd;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_197_p0 = tmp_33_fu_508_p1;
    end else begin
        grp_fu_197_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st149_fsm_148) | (1'b1 == ap_sig_cseq_ST_st145_fsm_144) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_sig_342 | ((1'b0 == enable_read_read_fu_124_p2) & (1'b0 == ap_sig_ioackin_output_axis_TREADY)))) | (1'b1 == ap_sig_cseq_ST_st144_fsm_143) | (1'b1 == ap_sig_cseq_ST_st146_fsm_145) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st147_fsm_146) | (1'b1 == ap_sig_cseq_ST_st148_fsm_147))) begin
        grp_fu_204_ce = 1'b1;
    end else begin
        grp_fu_204_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st144_fsm_143)) begin
        grp_fu_204_p0 = tmp_38_fu_606_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_204_p0 = tmp_1_fu_273_p1;
    end else begin
        grp_fu_204_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        input_axis_TDATA_blk_n = input_axis_TVALID;
    end else begin
        input_axis_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_sig_342 | ((1'b0 == enable_read_read_fu_124_p2) & (1'b0 == ap_sig_ioackin_output_axis_TREADY))))) begin
        input_axis_TREADY = 1'b1;
    end else begin
        input_axis_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0))) begin
        output_axis_TDATA = storemerge1_phi_fu_156_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & (1'b0 == enable_read_read_fu_124_p2) & ~ap_sig_342)) begin
        output_axis_TDATA = input_axis_TDATA;
    end else begin
        output_axis_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & (1'b0 == enable_read_read_fu_124_p2)))) begin
        output_axis_TDATA_blk_n = output_axis_TREADY;
    end else begin
        output_axis_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & (1'b0 == enable_read_read_fu_124_p2) & ~ap_sig_342 & (1'b0 == ap_reg_ioackin_output_axis_TREADY)) | ((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0) & (1'b0 == ap_reg_ioackin_output_axis_TREADY)))) begin
        output_axis_TVALID = 1'b1;
    end else begin
        output_axis_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0) & ~(1'b0 == store_val_load_reg_771))) begin
        storemerge1_phi_fu_156_p4 = p_Val2_11_fu_749_p3;
    end else begin
        storemerge1_phi_fu_156_p4 = storemerge1_reg_153;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st156_fsm_155) & ~(enable_read_reg_767 == 1'b0) & ~(1'b0 == store_val_load_reg_771))) begin
        storemerge_phi_fu_167_p4 = 1'b0;
    end else begin
        storemerge_phi_fu_167_p4 = storemerge_reg_163;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if ((~(ap_sig_342 | ((1'b0 == enable_read_read_fu_124_p2) & (1'b0 == ap_sig_ioackin_output_axis_TREADY))) & ~(1'b0 == enable_read_read_fu_124_p2) & ~(1'b0 == store_val_load_load_fu_269_p1))) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else if ((~(ap_sig_342 | ((1'b0 == enable_read_read_fu_124_p2) & (1'b0 == ap_sig_ioackin_output_axis_TREADY))) & ~(1'b0 == enable_read_read_fu_124_p2) & (1'b0 == store_val_load_load_fu_269_p1))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((1'b0 == enable_read_read_fu_124_p2) & ~(ap_sig_342 | ((1'b0 == enable_read_read_fu_124_p2) & (1'b0 == ap_sig_ioackin_output_axis_TREADY))))) begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st156_fsm_155;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            if ((1'b0 == tmp_23_fu_594_p2)) begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : begin
            ap_NS_fsm = ap_ST_st115_fsm_114;
        end
        ap_ST_st115_fsm_114 : begin
            ap_NS_fsm = ap_ST_st116_fsm_115;
        end
        ap_ST_st116_fsm_115 : begin
            ap_NS_fsm = ap_ST_st117_fsm_116;
        end
        ap_ST_st117_fsm_116 : begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        ap_ST_st118_fsm_117 : begin
            ap_NS_fsm = ap_ST_st119_fsm_118;
        end
        ap_ST_st119_fsm_118 : begin
            ap_NS_fsm = ap_ST_st120_fsm_119;
        end
        ap_ST_st120_fsm_119 : begin
            ap_NS_fsm = ap_ST_st121_fsm_120;
        end
        ap_ST_st121_fsm_120 : begin
            ap_NS_fsm = ap_ST_st122_fsm_121;
        end
        ap_ST_st122_fsm_121 : begin
            ap_NS_fsm = ap_ST_st123_fsm_122;
        end
        ap_ST_st123_fsm_122 : begin
            ap_NS_fsm = ap_ST_st124_fsm_123;
        end
        ap_ST_st124_fsm_123 : begin
            ap_NS_fsm = ap_ST_st125_fsm_124;
        end
        ap_ST_st125_fsm_124 : begin
            ap_NS_fsm = ap_ST_st126_fsm_125;
        end
        ap_ST_st126_fsm_125 : begin
            ap_NS_fsm = ap_ST_st127_fsm_126;
        end
        ap_ST_st127_fsm_126 : begin
            ap_NS_fsm = ap_ST_st128_fsm_127;
        end
        ap_ST_st128_fsm_127 : begin
            ap_NS_fsm = ap_ST_st129_fsm_128;
        end
        ap_ST_st129_fsm_128 : begin
            ap_NS_fsm = ap_ST_st130_fsm_129;
        end
        ap_ST_st130_fsm_129 : begin
            ap_NS_fsm = ap_ST_st131_fsm_130;
        end
        ap_ST_st131_fsm_130 : begin
            ap_NS_fsm = ap_ST_st132_fsm_131;
        end
        ap_ST_st132_fsm_131 : begin
            ap_NS_fsm = ap_ST_st133_fsm_132;
        end
        ap_ST_st133_fsm_132 : begin
            ap_NS_fsm = ap_ST_st134_fsm_133;
        end
        ap_ST_st134_fsm_133 : begin
            ap_NS_fsm = ap_ST_st135_fsm_134;
        end
        ap_ST_st135_fsm_134 : begin
            ap_NS_fsm = ap_ST_st136_fsm_135;
        end
        ap_ST_st136_fsm_135 : begin
            ap_NS_fsm = ap_ST_st137_fsm_136;
        end
        ap_ST_st137_fsm_136 : begin
            ap_NS_fsm = ap_ST_st138_fsm_137;
        end
        ap_ST_st138_fsm_137 : begin
            ap_NS_fsm = ap_ST_st139_fsm_138;
        end
        ap_ST_st139_fsm_138 : begin
            ap_NS_fsm = ap_ST_st140_fsm_139;
        end
        ap_ST_st140_fsm_139 : begin
            ap_NS_fsm = ap_ST_st141_fsm_140;
        end
        ap_ST_st141_fsm_140 : begin
            ap_NS_fsm = ap_ST_st142_fsm_141;
        end
        ap_ST_st142_fsm_141 : begin
            ap_NS_fsm = ap_ST_st143_fsm_142;
        end
        ap_ST_st143_fsm_142 : begin
            ap_NS_fsm = ap_ST_st144_fsm_143;
        end
        ap_ST_st144_fsm_143 : begin
            ap_NS_fsm = ap_ST_st145_fsm_144;
        end
        ap_ST_st145_fsm_144 : begin
            ap_NS_fsm = ap_ST_st146_fsm_145;
        end
        ap_ST_st146_fsm_145 : begin
            ap_NS_fsm = ap_ST_st147_fsm_146;
        end
        ap_ST_st147_fsm_146 : begin
            ap_NS_fsm = ap_ST_st148_fsm_147;
        end
        ap_ST_st148_fsm_147 : begin
            ap_NS_fsm = ap_ST_st149_fsm_148;
        end
        ap_ST_st149_fsm_148 : begin
            ap_NS_fsm = ap_ST_st150_fsm_149;
        end
        ap_ST_st150_fsm_149 : begin
            ap_NS_fsm = ap_ST_st151_fsm_150;
        end
        ap_ST_st151_fsm_150 : begin
            ap_NS_fsm = ap_ST_st152_fsm_151;
        end
        ap_ST_st152_fsm_151 : begin
            ap_NS_fsm = ap_ST_st153_fsm_152;
        end
        ap_ST_st153_fsm_152 : begin
            ap_NS_fsm = ap_ST_st154_fsm_153;
        end
        ap_ST_st154_fsm_153 : begin
            ap_NS_fsm = ap_ST_st155_fsm_154;
        end
        ap_ST_st155_fsm_154 : begin
            ap_NS_fsm = ap_ST_st156_fsm_155;
        end
        ap_ST_st156_fsm_155 : begin
            if (~(~(enable_read_reg_767 == 1'b0) & (1'b0 == ap_sig_ioackin_output_axis_TREADY))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_173 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_202 = (1'b1 == ap_CS_fsm[ap_const_lv32_9B]);
end

always @ (*) begin
    ap_sig_257 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_264 = (1'b1 == ap_CS_fsm[ap_const_lv32_94]);
end

always @ (*) begin
    ap_sig_274 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_281 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_289 = (1'b1 == ap_CS_fsm[ap_const_lv32_99]);
end

always @ (*) begin
    ap_sig_299 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_306 = (1'b1 == ap_CS_fsm[ap_const_lv32_90]);
end

always @ (*) begin
    ap_sig_316 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_323 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_331 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_342 = ((ap_start == 1'b0) | (input_axis_TVALID == 1'b0));
end

always @ (*) begin
    ap_sig_370 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_379 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_390 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_399 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_419 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_428 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_442 = (1'b1 == ap_CS_fsm[ap_const_lv32_48]);
end

always @ (*) begin
    ap_sig_451 = (1'b1 == ap_CS_fsm[ap_const_lv32_4E]);
end

always @ (*) begin
    ap_sig_460 = (1'b1 == ap_CS_fsm[ap_const_lv32_6D]);
end

always @ (*) begin
    ap_sig_469 = (1'b1 == ap_CS_fsm[ap_const_lv32_8B]);
end

always @ (*) begin
    ap_sig_480 = (1'b1 == ap_CS_fsm[ap_const_lv32_8C]);
end

always @ (*) begin
    ap_sig_489 = (1'b1 == ap_CS_fsm[ap_const_lv32_8F]);
end

always @ (*) begin
    ap_sig_498 = (1'b1 == ap_CS_fsm[ap_const_lv32_9A]);
end

always @ (*) begin
    ap_sig_548 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_555 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_563 = (1'b1 == ap_CS_fsm[ap_const_lv32_95]);
end

always @ (*) begin
    ap_sig_577 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_584 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_591 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_598 = (1'b1 == ap_CS_fsm[ap_const_lv32_8D]);
end

always @ (*) begin
    ap_sig_606 = (1'b1 == ap_CS_fsm[ap_const_lv32_91]);
end

always @ (*) begin
    ap_sig_627 = (1'b1 == ap_CS_fsm[ap_const_lv32_49]);
end

always @ (*) begin
    ap_sig_636 = (1'b1 == ap_CS_fsm[ap_const_lv32_4F]);
end

always @ (*) begin
    ap_sig_644 = (1'b1 == ap_CS_fsm[ap_const_lv32_6E]);
end

always @ (*) begin
    ap_sig_652 = (1'b1 == ap_CS_fsm[ap_const_lv32_2A]);
end

always @ (*) begin
    ap_sig_886 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_893 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_900 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_907 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_919 = (1'b1 == ap_CS_fsm[ap_const_lv32_92]);
end

always @ (*) begin
    ap_sig_927 = (1'b1 == ap_CS_fsm[ap_const_lv32_93]);
end

assign enable_read_read_fu_124_p2 = enable;

assign grp_fu_200_p0 = ret_1_fu_500_p3;

assign isNeg_1_fu_664_p3 = sh_assign_2_fu_658_p2[ap_const_lv32_8];

assign isNeg_fu_335_p3 = sh_assign_fu_329_p2[ap_const_lv32_8];

assign loc_V_3_fu_638_p1 = p_Val2_6_fu_616_p1[22:0];

assign loc_V_4_fu_299_p4 = {{p_Val2_s_fu_287_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign loc_V_5_fu_309_p1 = p_Val2_s_fu_287_p1[22:0];

assign loc_V_fu_628_p4 = {{p_Val2_6_fu_616_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign notlhs_fu_576_p2 = ((tmp_8_fu_562_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs_fu_582_p2 = ((tmp_37_fu_572_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_Result_1_fu_642_p3 = {{1'b1}, {loc_V_3_fu_638_p1}};

assign p_Result_3_fu_313_p3 = {{1'b1}, {loc_V_5_fu_309_p1}};

assign p_Val2_11_fu_749_p3 = ((p_Result_s_reg_899[0:0] === 1'b1) ? p_Val2_7_i_i_fu_744_p2 : p_Val2_9_reg_904);

assign p_Val2_3_fu_407_p3 = ((isNeg_fu_335_p3[0:0] === 1'b1) ? tmp_20_fu_393_p1 : tmp_24_fu_397_p4);

assign p_Val2_5_fu_420_p3 = ((p_Result_2_reg_790[0:0] === 1'b1) ? p_Val2_7_i_i1_fu_415_p2 : p_Val2_3_reg_795);

assign p_Val2_6_fu_616_p1 = reg_242;

assign p_Val2_7_i_i1_fu_415_p2 = (ap_const_lv16_0 - p_Val2_3_reg_795);

assign p_Val2_7_i_i_fu_744_p2 = (ap_const_lv16_0 - p_Val2_9_reg_904);

assign p_Val2_9_fu_736_p3 = ((isNeg_1_fu_664_p3[0:0] === 1'b1) ? tmp_31_fu_722_p1 : tmp_32_fu_726_p4);

assign p_Val2_s_fu_287_p1 = reg_242;

assign ret_1_fu_500_p3 = {{tmp_i_8_fu_494_p2}, {tmp_6_i_fu_476_p4}};

assign sh_assign_1_cast_cast_fu_365_p1 = $signed(sh_assign_1_fu_353_p3);

assign sh_assign_1_cast_fu_361_p1 = $signed(sh_assign_1_fu_353_p3);

assign sh_assign_1_fu_353_p3 = ((isNeg_fu_335_p3[0:0] === 1'b1) ? tmp_1_i_i1_cast_fu_349_p1 : sh_assign_fu_329_p2);

assign sh_assign_2_fu_658_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast6_fu_654_p1));

assign sh_assign_3_cast_cast_fu_694_p1 = $signed(sh_assign_3_fu_682_p3);

assign sh_assign_3_cast_fu_690_p1 = $signed(sh_assign_3_fu_682_p3);

assign sh_assign_3_fu_682_p3 = ((isNeg_1_fu_664_p3[0:0] === 1'b1) ? tmp_1_i_i_cast_fu_678_p1 : sh_assign_2_fu_658_p2);

assign sh_assign_fu_329_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i1_cast5_fu_325_p1));

assign store_val_load_load_fu_269_p1 = store_val;

assign tmp2_fu_464_p2 = (tmp_25_fu_436_p3 ^ tmp_26_fu_444_p3);

assign tmp3_fu_529_p2 = (tmp_25_fu_436_p3 ^ tmp_30_fu_486_p3);

assign tmp4_fu_535_p2 = (tmp_34_fu_513_p3 ^ tmp_35_fu_521_p3);

assign tmp_1_fu_273_p1 = $signed(input_axis_TDATA);

assign tmp_1_i_i1_cast_fu_349_p1 = $signed(tmp_1_i_i1_fu_343_p2);

assign tmp_1_i_i1_fu_343_p2 = (ap_const_lv8_7F - loc_V_4_fu_299_p4);

assign tmp_1_i_i_cast_fu_678_p1 = $signed(tmp_1_i_i_fu_672_p2);

assign tmp_1_i_i_fu_672_p2 = (ap_const_lv8_7F - loc_V_fu_628_p4);

assign tmp_20_fu_393_p1 = tmp_fu_385_p3;

assign tmp_21_fu_588_p2 = (notrhs_fu_582_p2 | notlhs_fu_576_p2);

assign tmp_23_fu_594_p2 = (tmp_21_fu_588_p2 & tmp_22_fu_213_p2);

assign tmp_24_fu_397_p4 = {{tmp_5_i_i1_fu_379_p2[ap_const_lv32_26 : ap_const_lv32_17]}};

assign tmp_25_fu_436_p3 = ret_reg_144[ap_const_lv32_3];

assign tmp_26_fu_444_p3 = ret_reg_144[ap_const_lv32_5];

assign tmp_27_fu_452_p3 = ret_reg_144[ap_const_lv32_2];

assign tmp_28_fu_460_p1 = ret_reg_144[0:0];

assign tmp_29_fu_470_p2 = (tmp_27_fu_452_p3 ^ tmp_28_fu_460_p1);

assign tmp_2_i_i1_fu_369_p1 = $unsigned(sh_assign_1_cast_fu_361_p1);

assign tmp_2_i_i_fu_698_p1 = $unsigned(sh_assign_3_cast_fu_690_p1);

assign tmp_30_fu_486_p3 = ret_reg_144[ap_const_lv32_1];

assign tmp_31_fu_722_p1 = tmp_42_fu_714_p3;

assign tmp_32_fu_726_p4 = {{tmp_5_i_i_fu_708_p2[ap_const_lv32_26 : ap_const_lv32_17]}};

assign tmp_33_fu_508_p1 = ret_reg_144;

assign tmp_34_fu_513_p3 = ret_reg_144[ap_const_lv32_4];

assign tmp_35_fu_521_p3 = ret_reg_144[ap_const_lv32_6];

assign tmp_37_fu_572_p1 = w_to_int_fu_559_p1[22:0];

assign tmp_38_fu_606_p1 = $signed(input_axis_read_reg_762);

assign tmp_3_i_i1_fu_373_p2 = p_Result_3_fu_313_p3 >> sh_assign_1_cast_cast_fu_365_p1;

assign tmp_3_i_i_fu_702_p2 = p_Result_1_fu_642_p3 >> sh_assign_3_cast_cast_fu_694_p1;

assign tmp_42_fu_714_p3 = tmp_3_i_i_fu_702_p2[ap_const_lv32_17];

assign tmp_5_i7_fu_541_p2 = (tmp4_fu_535_p2 ^ tmp3_fu_529_p2);

assign tmp_5_i_i1_fu_379_p2 = tmp_i_i1_fu_321_p1 << tmp_2_i_i1_fu_369_p1;

assign tmp_5_i_i_fu_708_p2 = tmp_i_i_fu_650_p1 << tmp_2_i_i_fu_698_p1;

assign tmp_6_i_fu_476_p4 = {{ret_reg_144[ap_const_lv32_F : ap_const_lv32_1]}};

assign tmp_8_fu_562_p4 = {{w_to_int_fu_559_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_8_i_fu_552_p4 = {{{tmp_5_i7_reg_821}, {tmp_i_8_reg_811}}, {tmp_i_reg_806}};

assign tmp_fu_385_p3 = tmp_3_i_i1_fu_373_p2[ap_const_lv32_17];

assign tmp_i_8_fu_494_p2 = (tmp2_fu_464_p2 ^ tmp_29_fu_470_p2);

assign tmp_i_i1_fu_321_p1 = p_Result_3_fu_313_p3;

assign tmp_i_i_fu_650_p1 = p_Result_1_fu_642_p3;

assign tmp_i_i_i1_cast5_fu_325_p1 = loc_V_4_fu_299_p4;

assign tmp_i_i_i_cast6_fu_654_p1 = loc_V_fu_628_p4;

assign w_to_int_fu_559_p1 = w_reg_842;

endmodule //awgn
