// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// control_axil
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : Data signal of shift_val
//        bit 31~0 - shift_val[31:0] (Read/Write)
// 0x14 : reserved
// 0x18 : Data signal of sum_val
//        bit 31~0 - sum_val[31:0] (Read/Write)
// 0x1c : reserved
// 0x20 : Data signal of enable_flag
//        bit 0  - enable_flag[0] (Read/Write)
//        others - reserved
// 0x24 : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XPWM_PREPARE_CONTROL_AXIL_ADDR_AP_CTRL          0x00
#define XPWM_PREPARE_CONTROL_AXIL_ADDR_GIE              0x04
#define XPWM_PREPARE_CONTROL_AXIL_ADDR_IER              0x08
#define XPWM_PREPARE_CONTROL_AXIL_ADDR_ISR              0x0c
#define XPWM_PREPARE_CONTROL_AXIL_ADDR_SHIFT_VAL_DATA   0x10
#define XPWM_PREPARE_CONTROL_AXIL_BITS_SHIFT_VAL_DATA   32
#define XPWM_PREPARE_CONTROL_AXIL_ADDR_SUM_VAL_DATA     0x18
#define XPWM_PREPARE_CONTROL_AXIL_BITS_SUM_VAL_DATA     32
#define XPWM_PREPARE_CONTROL_AXIL_ADDR_ENABLE_FLAG_DATA 0x20
#define XPWM_PREPARE_CONTROL_AXIL_BITS_ENABLE_FLAG_DATA 1

